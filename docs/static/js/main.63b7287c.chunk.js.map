{"version":3,"sources":["Solution.module.css","App.module.css","Solution.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Solution","figures","w","Array","fill","h","useState","bgColors","setBgColors","useEffect","isArray","colors","forEach","i","point","figure","x","y","points","dx","dy","backgroundColor","color","map","hValue","hIndex","className","styles","wValue","wIndex","style","data","require","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qJACAA,EAAOC,QAAU,CAAC,IAAM,sBAAsB,IAAM,wB,iBCApDD,EAAOC,QAAU,CAAC,cAAgB,6B,kntpCCyCnBC,EAvCE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACTC,EAAI,IAAIC,MAAM,IAAIC,KAAK,MACvBC,EAAI,IAAIF,MAAM,GAAGC,KAAK,MAFA,EAIIE,mBAAS,IAJb,mBAIrBC,EAJqB,KAIXC,EAJW,KAmB5B,OAbAC,qBAAU,WACN,GAAIN,MAAMO,QAAQT,GAAU,CACxB,IAAMU,EAAS,GACfV,EAAQW,SAAQ,WAAkBC,GAAO,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,OAAe,cACrBD,EADqB,GAC7BE,EAD6B,KAC1BC,EAD0B,KAEpCF,EAAOG,OAAON,SAAQ,YAAe,IAAD,mBAAZO,EAAY,KAARC,EAAQ,KAChCT,EAAO,GAAD,OAAIK,EAAIG,EAAR,YAAcF,EAAIG,IAAQ,CAACC,gBAAiBN,EAAOO,aAGjEd,EAAYG,MAEjB,CAACV,IAGA,8BAEQI,EAAEkB,KAAI,SAACC,EAAQC,GACX,OAAO,qBAAKC,UAAWC,MAAhB,SAECzB,EAAEqB,KAAI,SAACK,EAAQC,GACX,OAAO,qBAAKH,UAAWC,MACXG,MAAOvB,EAAS,GAAD,OAAIsB,EAAJ,YAAcJ,KAAa,IADdI,OAHZJ,SCtBtDM,EAAOC,EAAQ,IAcNC,MAZf,WACI,OAAO,qCACH,2EACCF,EAAKR,KAAI,SAACtB,EAASY,GAAV,OACN,sBAAaa,UAAWC,gBAAxB,UACI,6CAAgBd,EAAI,KACpB,cAAC,EAAD,CAAUZ,QAASA,MAFbY,UCEPqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63b7287c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Solution_row__4STg6\",\"col\":\"Solution_col__ZqsjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"solutionBlock\":\"App_solutionBlock__1gZpM\"};","import React, {useEffect, useState} from 'react';\r\nimport * as styles from './Solution.module.css';\r\n\r\nconst Solution = ({figures}) => {\r\n    const w = new Array(10).fill(null);\r\n    const h = new Array(5).fill(null);\r\n\r\n    const [bgColors, setBgColors] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(figures)) {\r\n            const colors = {};\r\n            figures.forEach(({point, figure}, i) => {\r\n                const [x, y] = point;\r\n                figure.points.forEach(([dx, dy]) => {\r\n                    colors[`${x + dx}-${y + dy}`] = {backgroundColor: figure.color};\r\n                })\r\n            });\r\n            setBgColors(colors);\r\n        }\r\n    }, [figures])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                h.map((hValue, hIndex) => {\r\n                    return <div className={styles.row} key={hIndex}>\r\n                        {\r\n                            w.map((wValue, wIndex) => {\r\n                                return <div className={styles.col} key={wIndex}\r\n                                            style={bgColors[`${wIndex}-${hIndex}`] || {}}>\r\n                                    {/*{wIndex}-{hIndex}*/}\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Solution;","import React from \"react\";\nimport * as styles from './App.module.css';\nimport Solution from \"./Solution\";\n\nconst data = require('./data.json');\n\nfunction App() {\n    return <>\n        <h1>Smart Games IQ Fit (first 1000 solutions)</h1>\n        {data.map((figures, i) => (\n            <div key={i} className={styles.solutionBlock}>\n                <h4>Solution # {i + 1}</h4>\n                <Solution figures={figures}/>\n            </div>\n        ))}\n    </>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}